{"version":3,"sources":["webpack:///../packages/flow-ui/components/src/PageTitle/PageTitle.jsx","webpack:///../packages/flow-ui/components/src/ContactForm/ContactForm.jsx","webpack:///../packages/common/helpers/src/useForm.jsx","webpack:///../packages/flow-ui/widgets/src/ContactForm/ContactForm.jsx","webpack:///../packages/themes/gatsby-theme-flexiblog-minimal-v2/src/@elegantstack/pages-blog/pages/contact.jsx"],"names":["styles","count","fontSize","subheader","fontWeight","color","runninghead","mb","PageTitle","header","running","totalCount","variant","sx","ContactForm","handleSubmit","submitting","success","onSubmit","name","data-netlify","htmlFor","type","id","required","placeholder","disabled","size","useForm","useState","setSubmitting","submitted","setSubmitted","values","setValues","setSuccess","sendValues","useCallback","setTimeout","console","log","useEffect","e","preventDefault","newValues","FormData","target","entries","pair","Seo","title","Divider"],"mappings":"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","file":"component---packages-themes-gatsby-theme-flexiblog-minimal-v-2-src-elegantstack-pages-blog-pages-contact-jsx-1f4c991c4c9d4dd5ee2e.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Heading, Text, Badge } from 'theme-ui'\r\n\r\nconst styles = {\r\n  count: {\r\n    fontSize: 4\r\n  },\r\n  subheader: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`\r\n  },\r\n  runninghead: {\r\n    fontWeight: `body`,\r\n    color: `omegaDark`,\r\n    mb: 0\r\n  }\r\n}\r\n\r\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\r\n  return (\r\n    <div>\r\n      <Heading variant='h1'>\r\n        {header}{' '}\r\n        {totalCount && (\r\n          <Badge variant='tag-white' sx={styles.count}>\r\n            {' '}\r\n            {totalCount}\r\n          </Badge>\r\n        )}\r\n      </Heading>\r\n      {subheader && (\r\n        <Text variant='h3' sx={styles.subheader}>\r\n          {subheader}\r\n        </Text>\r\n      )}\r\n      {running && (\r\n        <Text variant='h4' sx={styles.runninghead}>\r\n          {running}\r\n        </Text>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string,\r\n  subheader: PropTypes.string,\r\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  totalCount: PropTypes.number\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Label, Input, Textarea, Button, Message, Spinner } from 'theme-ui'\r\n\r\nconst ContactForm = ({ handleSubmit, submitting, success }) => (\r\n  <form onSubmit={handleSubmit} name=\"contact\" data-netlify=\"true\">\r\n    {success && (\r\n      <Message variant='success'>\r\n        Thank you for contacting us. We'll get back to you soon!\r\n      </Message>\r\n    )}\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-name'>Name</Label>\r\n        <Input type='text' id='contact-form-name' name='name' required />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-company'>Company Name</Label>\r\n        <Input type='text' id='contact-form-company' name='company' />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-email'>Email</Label>\r\n        <Input\r\n          type='email'\r\n          placeholder='email@example.com'\r\n          id='contact-form-email'\r\n          name='email'\r\n          required\r\n        />\r\n      </Box>\r\n      <Box variant='forms.column'>\r\n        <Label htmlFor='contact-form-phone'>Phone Number</Label>\r\n        <Input\r\n          type='tel'\r\n          placeholder='(xxx) xxx-xxxx'\r\n          id='contact-form-phone'\r\n          name='phone'\r\n        />\r\n      </Box>\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-subject'>Subject</Label>\r\n      <Input type='text' id='contact-form-subject' name='subject' required />\r\n    </Box>\r\n    <Box variant='forms.row'>\r\n      <Label htmlFor='contact-form-message'>Your Message</Label>\r\n      <Textarea name='message' id='contact-form-message' />\r\n    </Box>\r\n    <Button\r\n      variant={success || submitting ? 'disabled' : 'primary'}\r\n      disabled={success || submitting}\r\n      type='submit'\r\n      required\r\n    >\r\n      Submit {submitting && <Spinner size='20' />}\r\n    </Button>\r\n  </form>\r\n)\r\n\r\nexport default ContactForm\r\n\r\nContactForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  submitting: PropTypes.bool,\r\n  success: PropTypes.bool\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\n\r\nconst useForm = () => {\r\n  const [submitting, setSubmitting] = useState(false)\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const [values, setValues] = useState({})\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    setSubmitting(true)\r\n    const data = new FormData(e.target)\r\n    const newValues = {}\r\n    for (var pair of data.entries()) {\r\n      newValues[pair[0]] = pair[1]\r\n    }\r\n    setValues(newValues)\r\n    setSubmitted(true)\r\n  }\r\n\r\n  const sendValues = useCallback(() => {\r\n    /**\r\n     * Code for submitting form values\r\n     * via an external API goes here.\r\n     */\r\n    setTimeout(function() {\r\n      console.log(values)\r\n      setSuccess(true)\r\n      setSubmitting(false)\r\n    }, 2000)\r\n  }, [values])\r\n\r\n  useEffect(() => {\r\n    if (submitted) {\r\n      sendValues()\r\n    }\r\n  }, [submitted, sendValues])\r\n\r\n  return {\r\n    handleSubmit,\r\n    submitting,\r\n    submitted,\r\n    success\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import React from 'react'\r\nimport { Card } from 'theme-ui'\r\nimport ContactFormComponent from '@components/ContactForm'\r\nimport useForm from '@helpers/useForm'\r\n\r\nconst ContactForm = () => {\r\n  const { handleSubmit, submitting, success } = useForm()\r\n\r\n  return (\r\n    <Card variant='paper'>\r\n      <ContactFormComponent {...{ handleSubmit, submitting, success }} />\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport { Stack, Main } from '@layout'\r\nimport PageTitle from '@components/PageTitle'\r\nimport Divider from '@components/Divider'\r\nimport Seo from '@widgets/Seo'\r\nimport ContactForm from '@widgets/ContactForm'\r\n\r\nexport default () => (\r\n  <>\r\n    <Seo title='Contact' />\r\n    <Divider />\r\n    <Stack>\r\n      <Main>\r\n        <PageTitle\r\n          header=\"Let's Connect\"\r\n          subheader=''\r\n        />\r\n        <Divider />\r\n        <ContactForm />\r\n      </Main>\r\n    </Stack>\r\n  </>\r\n)\r\n"],"sourceRoot":""}